// -----------------------------------------------------------------------------------------------------
// @ Sinbad colors map
// -----------------------------------------------------------------------------------------------------
$sinbadPrefix: 'sinbad';

$sinbadPalettes: (
    'red': (
        '10': '#F0444C',
        '40': '#F58287',
        '50': '#F0444C',
        '60': '#A02D32',
        '80': '#501619',
    ),
    'yellow': (
        '10': '#FFF0D1',
        '40': '#FCC047',
        '50': '#FBAF18',
        '60': '#E39E14',
        '80': '#C98C10',
    ),
    'green': (
        '10': '#E1F7E8',
        '40': '#51C273',
        '50': '#31B057',
        '60': '#1C9440',
        '80': '#0F752E',
    ),
    'blue': (
        '10': '#DBEBFF',
        '40': '#5BAF05',
        '50': '#388BF2',
        '60': '#216BC4',
        '80': '#114D96',
    ),
    'black': (
        '5': '#FAFAFA',
        '10': '#E8E8E8',
        '40': '#CACCCF',
        '50': '#25282B',
        '60': '#A0A4A8',
        '80': '#52575C',
        '100': '#25282B',
    ),
);

@mixin generate-sinbad-color-classes($colorName, $level, $color) {
    $_color: unquote($color);

    .#{$sinbadPrefix}-#{$colorName}#{$level} {
        background-color: $_color !important;

        @if ($colorName != 'white') {
            color: white !important;
        } @else {
            $black: map-get($sinbadPalettes, 'black');
            $black50: map-get($black, '50');

            color: $black50 !important;
        }
    }

    .#{$sinbadPrefix}-#{$colorName}#{$level}-bg {
        background-color: $_color !important;
    }

    .#{$sinbadPrefix}-#{$colorName}#{$level}-fg {
        color: $_color !important;
    }

    .#{$sinbadPrefix}-#{$colorName}#{$level}-border {
        border-color: $_color !important;
    }

    .#{$sinbadPrefix}-#{$colorName}#{$level}-border-top {
        border-top-color: $_color !important;
    }

    .#{$sinbadPrefix}-#{$colorName}#{$level}-border-right {
        border-right-color: $_color !important;
    }

    .#{$sinbadPrefix}-#{$colorName}#{$level}-border-bottom {
        border-bottom-color: $_color !important;
    }

    .#{$sinbadPrefix}-#{$colorName}#{$level}-border-left {
        border-left-color: $_color !important;
    }
}

// -----------------------------------------------------------------------------------------------------
// @ Prepare Sinbad color classes
// -----------------------------------------------------------------------------------------------------
@mixin prepare-sinbad-color-classes($palettes) {
    @each $colorName, $colorLevels in $sinbadPalettes {
        $color50: map-get($colorLevels, '50');
        @include generate-sinbad-color-classes($colorName, '', $color50);

        @each $level, $color in $colorLevels {
            @include generate-sinbad-color-classes($colorName, '-#{$level}', $color);
        }
    }
    
    @include generate-sinbad-color-classes('white', '', '#FFFFFF');
}

// -----------------------------------------------------------------------------------------------------
// @ Generate Sinbad color classes for default Material palettes
// -----------------------------------------------------------------------------------------------------
@include prepare-sinbad-color-classes($matPalettes);