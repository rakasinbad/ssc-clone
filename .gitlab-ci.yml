stages:
    - start_instance
    - build
    - deploy
#    - stop_instance

start_runner_development:
    stage: start_instance
    image: mikesir87/aws-cli:latest
    script:
        - echo "Starting the instance"
        - mkdir ~/.aws/
        - touch ~/.aws/credentials
        - printf "[default]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$access_key_ID" "$secret_access_key" >> ~/.aws/credentials
        - printf "[default]\nregion = %s\noutput = %s\n" "$region" "json" >> ~/.aws/config
        - aws ec2 start-instances --instance-ids i-0b5d8441ab6417b2f
        - rm -rf ~/.aws/
        - sleep 30
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-alpha-\d+$/'
          when: always
    tags:
        - docker

start_runner_staging:
    stage: start_instance
    image: mikesir87/aws-cli:latest
    script:
        - echo "Starting the instance"
        - mkdir ~/.aws/
        - touch ~/.aws/credentials
        - printf "[default]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$access_key_ID" "$secret_access_key" >> ~/.aws/credentials
        - printf "[default]\nregion = %s\noutput = %s\n" "$region" "json" >> ~/.aws/config
        - aws ec2 start-instances --instance-ids i-0b5d8441ab6417b2f
        - rm -rf ~/.aws/
        - sleep 30
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-beta-\d+$/'
          when: always
    tags:
        - docker

start_runner_demo:
    stage: start_instance
    image: mikesir87/aws-cli:latest
    script:
        - echo "Starting the instance"
        - mkdir ~/.aws/
        - touch ~/.aws/credentials
        - printf "[default]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$access_key_ID" "$secret_access_key" >> ~/.aws/credentials
        - printf "[default]\nregion = %s\noutput = %s\n" "$region" "json" >> ~/.aws/config
        - aws ec2 start-instances --instance-ids i-0b5d8441ab6417b2f
        - rm -rf ~/.aws/
        - sleep 30
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-demo-\d+$/'
          when: always
    tags:
        - docker

start_runner_production:
    stage: start_instance
    image: mikesir87/aws-cli:latest
    script:
        - echo "Starting the instance"
        - mkdir ~/.aws/
        - touch ~/.aws/credentials
        - printf "[default]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$access_key_ID" "$secret_access_key" >> ~/.aws/credentials
        - printf "[default]\nregion = %s\noutput = %s\n" "$region" "json" >> ~/.aws/config
        - aws ec2 start-instances --instance-ids i-0b5d8441ab6417b2f
        - rm -rf ~/.aws/
        - sleep 30
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)$/'
          when: always
    tags:
        - docker

build_development:
    stage: build
    image: node:12-alpine
    before_script:
        - apk update
        - apk add git
        - npm install
    script:
        - echo "Commit tag -> $CI_COMMIT_TAG"
        - echo "Commit short hash -> $CI_COMMIT_SHORT_SHA"
        - sed -i "s@appVersion:\s''@appVersion:'$CI_COMMIT_TAG'@" src/environments/environment.dev.ts
        - sed -i "s@appHash:\s''@appHash:'$CI_COMMIT_SHORT_SHA'@" src/environments/environment.dev.ts
        - npm run build-development
    artifacts:
        paths:
        - dist/supplier-center/
        expire_in: 1 week
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-alpha-\d+$/'
          when: always
    tags:
        - sinbad-aws-docker-runner

build_staging:
    stage: build
    image: node:12-alpine
    before_script:
        - apk update
        - apk add git
        - npm install
    script:
        - echo "Commit tag -> $CI_COMMIT_TAG"
        - echo "Commit short hash -> $CI_COMMIT_SHORT_SHA"
        - sed -i "s@appVersion:\s''@appVersion:'$CI_COMMIT_TAG'@" src/environments/environment.stg.ts
        - sed -i "s@appHash:\s''@appHash:'$CI_COMMIT_SHORT_SHA'@" src/environments/environment.stg.ts
        - npm run build-staging
    artifacts:
        paths:
        - dist/supplier-center/
        expire_in: 1 week
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-beta-\d+$/'
          when: always
    tags:
        - sinbad-aws-docker-runner

build_demo:
    stage: build
    image: node:12-alpine
    before_script:
        - apk update
        - apk add git
        - npm install
    script:
        - echo "Commit tag -> $CI_COMMIT_TAG"
        - echo "Commit short hash -> $CI_COMMIT_SHORT_SHA"
        - sed -i "s@appVersion:\s''@appVersion:'$CI_COMMIT_TAG'@" src/environments/environment.demo.ts
        - sed -i "s@appHash:\s''@appHash:'$CI_COMMIT_SHORT_SHA'@" src/environments/environment.demo.ts
        - npm run build-demo
    artifacts:
        paths:
        - dist/supplier-center/
        expire_in: 1 week
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-demo-\d+$/'
          when: always
    tags:
        - sinbad-aws-docker-runner

build_production:
    stage: build
    image: node:12-alpine
    before_script:
        - apk update
        - apk add git
        - npm install
    script:
        - echo "Commit tag -> $CI_COMMIT_TAG"
        - echo "Commit short hash -> $CI_COMMIT_SHORT_SHA"
        - sed -i "s@appVersion:\s''@appVersion:'$CI_COMMIT_TAG'@" src/environments/environment.prod.ts
        - sed -i "s@appHash:\s''@appHash:'$CI_COMMIT_SHORT_SHA'@" src/environments/environment.prod.ts
        - npm run build-production
    artifacts:
        paths:
        - dist/supplier-center/
        expire_in: 1 week
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)$/'
          when: always
    tags:
        - sinbad-aws-docker-runner

deploy_development:
    stage: deploy
    image: instrumentisto/rsync-ssh:latest
    artifacts:
        paths:
            - dist/supplier-center/
    before_script:
        - mkdir -p ~/.ssh
        - echo "$deploy_private_key_dev" | tr -d '\r' > ~/.ssh/id_rsa
        - echo "$deploy_public_key_dev" | tr -d '\r' > ~/.ssh/id_rsa.pub
        - chmod 600 ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa.pub
    script:
        # - ls -laah ${CI_PROJECT_DIR}/dist/supplier-center/
        # - rm dist/supplier-center/*.map
        - ssh -i ~/.ssh/id_rsa deploy@10.0.50.30 -o StrictHostKeyChecking=no -t "find /var/www/seller-center-bak -type f -mmin +20 -delete"
        - ssh -i ~/.ssh/id_rsa deploy@10.0.50.30 -o StrictHostKeyChecking=no -t "rsync -avz /var/www/seller-dev.sinbad.web.id/ /var/www/seller-center-bak"
        - rsync -avz --delete --force --omit-dir-times -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ${CI_PROJECT_DIR}/dist/supplier-center/ deploy@10.0.50.30:/var/www/seller-dev.sinbad.web.id
    after_script:
        - rm -rf  ~/.ssh
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-alpha-\d+$/'
          when: always
    tags:
        - sinbad-aws-docker-runner

deploy_staging:
    stage: deploy
    image: node:12-alpine
    artifacts:
        paths:
            - dist/supplier-center/
    before_script:
        - mkdir -p ~/.ssh
        - echo "$deploy_private_key_stg" | tr -d '\r' > ~/.ssh/id_rsa
        - echo "$deploy_public_key_stg" | tr -d '\r' > ~/.ssh/id_rsa.pub
        - chmod 600 ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa.pub
        - apk update
        - apk add openssh-client rsync
        - npm install -g logrocket-cli
    script:
        - logrocket release ${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA} --apikey=$LOGROCKET_API_KEY
        - logrocket upload dist/supplier-center/ --release=${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA} --apikey=$LOGROCKET_API_KEY
        - rm dist/supplier-center/*.map
#        - ls -laah ${CI_PROJECT_DIR}/dist/supplier-center/
        - ssh -i ~/.ssh/id_rsa deploy@10.0.30.30 -o StrictHostKeyChecking=no -t "find /var/www/seller-center-bak -type f -mmin +25 -delete"
        - ssh -i ~/.ssh/id_rsa deploy@10.0.30.30 -o StrictHostKeyChecking=no -t "rsync -avz /var/www/seller-stg.sinbad.web.id/ /var/www/seller-center-bak"
        - rsync -avz --delete --force --omit-dir-times -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ${CI_PROJECT_DIR}/dist/supplier-center/ deploy@10.0.30.30:/var/www/seller-stg.sinbad.web.id
    after_script:
        - rm -rf  ~/.ssh
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-beta-\d+$/'
          when: always
    tags:
        - sinbad-aws-docker-runner

deploy_demo:
    stage: deploy
    image: node:12-alpine
    artifacts:
        paths:
            - dist/supplier-center/
    before_script:
        - mkdir -p ~/.ssh
        - echo "$deploy_private_key_demo" | tr -d '\r' > ~/.ssh/id_rsa
        - echo "$deploy_public_key_demo" | tr -d '\r' > ~/.ssh/id_rsa.pub
        - chmod 600 ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa.pub
        - apk update
        - apk add openssh-client rsync
        - npm install -g logrocket-cli
    script:
        - logrocket release ${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA} --apikey=$LOGROCKET_API_KEY
        - logrocket upload dist/supplier-center/ --release=${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA} --apikey=$LOGROCKET_API_KEY
        - rm dist/supplier-center/*.map
#        - ls -laah ${CI_PROJECT_DIR}/dist/supplier-center/
        - ssh -i ~/.ssh/id_rsa deploy@10.0.30.27 -o StrictHostKeyChecking=no -t "find /var/www/seller-center-bak -type f -mmin +25 -delete"
        - ssh -i ~/.ssh/id_rsa deploy@10.0.30.27 -o StrictHostKeyChecking=no -t "rsync -avz /var/www/seller-demo.sinbad.web.id/ /var/www/seller-center-bak"
        - rsync -avz --delete --force --omit-dir-times -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ${CI_PROJECT_DIR}/dist/supplier-center/ deploy@10.0.30.27:/var/www/seller-demo.sinbad.web.id
    after_script:
        - rm -rf  ~/.ssh
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-demo-\d+$/'
          when: always
    tags:
        - sinbad-aws-docker-runner

deploy_production:
    stage: deploy
    image: node:12-alpine
    artifacts:
        paths:
            - dist/supplier-center/
    before_script:
        - mkdir -p ~/.ssh
        - echo "$deploy_private_key_prod" | tr -d '\r' > ~/.ssh/id_rsa
        - echo "$deploy_public_key_prod" | tr -d '\r' > ~/.ssh/id_rsa.pub
        - chmod 600 ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa.pub
        - apk update
        - apk add openssh-client rsync
        - npm install -g logrocket-cli
    script:
        - logrocket release ${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA} --apikey=$LOGROCKET_API_KEY
        - logrocket upload dist/supplier-center/ --release=${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA} --apikey=$LOGROCKET_API_KEY
        - rm dist/supplier-center/*.map
#        - ls -laah ${CI_PROJECT_DIR}/dist/supplier-center/
        - ssh -i ~/.ssh/id_rsa deploy@10.0.10.20 -o StrictHostKeyChecking=no -t "find /var/www/seller-center-bak -type f -mmin +25 -delete"
        - ssh -i ~/.ssh/id_rsa deploy@10.0.10.20 -o StrictHostKeyChecking=no -t "rsync -avz /var/www/seller.sinbad.web.id/ /var/www/seller-center-bak"
        - rsync -avz --delete --force --omit-dir-times -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ${CI_PROJECT_DIR}/dist/supplier-center/ deploy@10.0.10.20:/var/www/seller.sinbad.web.id
    after_script:
        - rm -rf  ~/.ssh
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)$/'
          when: always
    tags:
        - sinbad-aws-docker-runner

#stop_runner_development:
#    stage: stop_instance
#    image: mikesir87/aws-cli:latest
#    script:
#        - echo "Stopping the instance"
#        - mkdir ~/.aws/
#        - touch ~/.aws/credentials
#        - printf "[default]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$access_key_ID" "$secret_access_key" >> ~/.aws/credentials
#        - printf "[default]\nregion = %s\noutput = %s\n" "$region" "json" >> ~/.aws/config
#        - aws ec2 stop-instances --instance-ids i-0b5d8441ab6417b2f
#        - rm -rf ~/.aws/
#    rules:
#        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-alpha-\d+$/'
#    tags:
#        - docker

#stop_runner_staging:
#    stage: stop_instance
#    image: mikesir87/aws-cli:latest
#    script:
#        - echo "Stopping the instance"
#        - mkdir ~/.aws/
#        - touch ~/.aws/credentials
#        - printf "[default]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$access_key_ID" "$secret_access_key" >> ~/.aws/credentials
#        - printf "[default]\nregion = %s\noutput = %s\n" "$region" "json" >> ~/.aws/config
#        - aws ec2 stop-instances --instance-ids i-0b5d8441ab6417b2f
#        - rm -rf ~/.aws/
#    rules:
#        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)-beta-\d+$/'
#    tags:
#        - docker

#stop_runner_production:
#    stage: stop_instance
#    image: mikesir87/aws-cli:latest
#    script:
#        - echo "Stopping the instance"
#        - mkdir ~/.aws/
#        - touch ~/.aws/credentials
#        - printf "[default]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$access_key_ID" "$secret_access_key" >> ~/.aws/credentials
#        - printf "[default]\nregion = %s\noutput = %s\n" "$region" "json" >> ~/.aws/config
#        - aws ec2 stop-instances --instance-ids i-0b5d8441ab6417b2f
#        - rm -rf ~/.aws/
#    rules:
#        - if: '$CI_COMMIT_REF_NAME =~ /^(\d+.\d+.\d+)$/'
#          when: always
#    tags:
#        - docker